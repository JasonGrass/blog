(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{542:function(t,a,s){t.exports=s.p+"assets/img/599d0f25gy1fuitcu74dcj20k70cajt2.03587ba3.jpg"},629:function(t,a,s){"use strict";s.r(a);var e=s(6),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("ELK ： ElasticSearch + Logstash + Kibana")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#%E4%B8%80%E7%AE%80%E4%BB%8B"}},[t._v("一、简介")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#11-logstash-%E5%85%B7%E6%9C%89%E5%AE%9E%E6%97%B6%E6%B8%A0%E9%81%93%E8%83%BD%E5%8A%9B%E7%9A%84%E6%95%B0%E6%8D%AE%E6%94%B6%E9%9B%86%E5%BC%95%E6%93%8E"}},[t._v("1.1 Logstash 具有实时渠道能力的数据收集引擎")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#12-elasticsearch-%E5%AE%9E%E6%97%B6%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E6%90%9C%E7%B4%A2%E5%92%8C%E5%88%86%E6%9E%90%E5%BC%95%E6%93%8E"}},[t._v("1.2 ElasticSearch 实时的分布式搜索和分析引擎")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#13-kibana-%E6%95%B0%E6%8D%AE%E7%9A%84%E5%89%8D%E7%AB%AF%E5%B1%95%E7%A4%BA%E5%92%8C%E5%8F%AF%E8%A7%86%E5%8C%96%E6%9F%A5%E8%AF%A2"}},[t._v("1.3 Kibana 数据的前端展示和可视化查询")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%BA%8Celasticsearch"}},[t._v("二、ElasticSearch")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#21-%E8%83%8C%E6%99%AF%E7%9F%A5%E8%AF%86---%E6%90%9C%E7%B4%A2%E6%A1%86%E6%9E%B6"}},[t._v("2.1 背景知识 - 搜索框架")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#22-elasticsearch-%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3"}},[t._v("2.2 ElasticSearch 概念理解")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#221-index---type---document---field"}},[t._v("2.2.1 Index - Type - Document - Field")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#222-%E5%88%86%E7%89%87-shards"}},[t._v("2.2.2 分片 shards")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#223-%E5%89%AF%E6%9C%AC-replicas"}},[t._v("2.2.3. 副本 replicas")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#23-elasticsearch-%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C"}},[t._v("2.3 ElasticSearch 基础操作")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#231-curl"}},[t._v("2.3.1 curl")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#232-%E5%85%B6%E5%AE%83%E6%9F%A5%E8%AF%A2%E5%92%8C%E6%93%8D%E4%BD%9C%E6%96%B9%E5%BC%8F"}},[t._v("2.3.2 其它查询和操作方式")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#24-search%E6%90%9C%E7%B4%A2%E8%AF%AD%E5%8F%A5%E4%B9%8B%E7%BB%93%E6%9E%84%E5%8C%96%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5dsl"}},[t._v("2.4 search搜索语句之结构化查询语句DSL")])])])]),t._v(" "),e("li",[e("a",{attrs:{href:"#%E4%B8%89kibana"}},[t._v("三、Kibana")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"#31-%E5%88%9B%E5%BB%BA%E7%B4%A2%E5%BC%95%E8%A1%A8%E8%BE%BE%E5%BC%8Fdefine-index-pattern"}},[t._v("3.1 创建索引表达式（Define Index Pattern）")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#32-discover-%E9%9D%A2%E6%9D%BF%E5%8F%91%E7%8E%B0%E6%95%B0%E6%8D%AE%E5%8E%9F%E5%A7%8B%E6%9F%A5%E8%AF%A2"}},[t._v("3.2 discover 面板发现数据，原始查询")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#33-%E5%8F%AF%E8%A7%86%E5%8C%96"}},[t._v("3.3 可视化")])])])])]),t._v(" "),e("h2",{attrs:{id:"一、简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、简介"}},[t._v("#")]),t._v(" 一、简介")]),t._v(" "),e("p",[t._v("ELK 是一套日志、数据收集，存储，查询与展示的解决方案。")]),t._v(" "),e("p",[t._v("包括三个主要的软件。")]),t._v(" "),e("h3",{attrs:{id:"_1-1-logstash-具有实时渠道能力的数据收集引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-logstash-具有实时渠道能力的数据收集引擎"}},[t._v("#")]),t._v(" 1.1 Logstash 具有实时渠道能力的数据收集引擎")]),t._v(" "),e("p",[t._v("可以理解为数据的搬运工，负责数据的采集，并传输给下一级（ElasticSearch）。"),e("br"),t._v("\n从使用端来看，Logstash 的工作流分为 "),e("code",[t._v("Input")]),t._v(","),e("code",[t._v("Filter")]),t._v(","),e("code",[t._v("Output")]),t._v(" 三个部分。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("input：原始数据的采集，这里可以采集各种数据，如日志，系统日志，调试数据，结构化或非结构化数据。")])]),t._v(" "),e("li",[e("p",[t._v("filter: 数据过滤器，对 input 采集的数据进行处理，如去除不必要的信息，或者格式重整等。(此项非必须)")])]),t._v(" "),e("li",[e("p",[t._v("output: 将收集到的数据发送给 ElasticSearch。")])])]),t._v(" "),e("p",[t._v("Logstash 的三个步骤都提供了丰富的插件，满足多种业务场景的需求。"),e("br"),t._v("\ne.g. "),e("a",{attrs:{href:"https://www.elastic.co/guide/en/logstash/current/input-plugins.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Input plugins | Logstash Reference [6.3] | Elastic"),e("OutboundLink")],1)]),t._v(" "),e("blockquote",[e("p",[t._v("官方文档 ： "),e("a",{attrs:{href:"https://www.elastic.co/products/logstash",target:"_blank",rel:"noopener noreferrer"}},[t._v("Logstash: Collect, Parse, Transform Logs | Elastic"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"_1-2-elasticsearch-实时的分布式搜索和分析引擎"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-elasticsearch-实时的分布式搜索和分析引擎"}},[t._v("#")]),t._v(" 1.2 ElasticSearch 实时的分布式搜索和分析引擎")]),t._v(" "),e("p",[t._v("ES 是 ELK 系统的核心，负责数据的存储和搜索。其搜索基于 Lucene 实现，在使用中，可以 lucene 的搜索语法。\n其主要特点是分布式，可以管理多个集群。\n可对外提供 RESTful 风格的接口。")]),t._v(" "),e("blockquote",[e("p",[t._v("官方文档 ： "),e("a",{attrs:{href:"https://www.elastic.co/products/elasticsearch",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch: RESTful, Distributed Search & Analytics | Elastic"),e("OutboundLink")],1)])]),t._v(" "),e("h3",{attrs:{id:"_1-3-kibana-数据的前端展示和可视化查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-kibana-数据的前端展示和可视化查询"}},[t._v("#")]),t._v(" 1.3 Kibana 数据的前端展示和可视化查询")]),t._v(" "),e("p",[t._v("Kibana 为数据的数据的查询和展示提供了方便的操作接口，并有丰富的可视化组件、看板等。能够跟直观地查看数据。")]),t._v(" "),e("blockquote",[e("p",[t._v("官方文档 ： "),e("a",{attrs:{href:"https://www.elastic.co/products/kibana",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kibana: Explore, Visualize, Discover Data | Elastic"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("ELK 基本结构图"),e("br"),t._v("\n这里的所有的内容都是分布式的。")]),t._v(" "),e("p",[e("img",{attrs:{src:s(542),alt:""}})]),t._v(" "),e("p",[t._v("参考阅读："),e("br"),t._v(" "),e("a",{attrs:{href:"https://www.ibm.com/developerworks/cn/opensource/os-cn-elk/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("集中式日志系统 ELK 协议栈详解"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"二、elasticsearch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、elasticsearch"}},[t._v("#")]),t._v(" 二、ElasticSearch")]),t._v(" "),e("h3",{attrs:{id:"_2-1-背景知识-搜索框架"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-背景知识-搜索框架"}},[t._v("#")]),t._v(" 2.1 背景知识 - 搜索框架")]),t._v(" "),e("p",[t._v("1、Lucene\nApache下面的一个开源项目，高性能的、可扩展的工具库，提供搜索的基本架构；\n如果开发人员需用使用的话，需用自己进行开发,成本比较大，但是性能高。")]),t._v(" "),e("p",[t._v("2、solr\nSolr基于Lucene的全文搜索框架，提供了比Lucene更为丰富的功能，\n同时实现了可配置、可扩展并对查询性能进行了优化\n建立索引时，搜索效率下降，实时索引搜索效率不高\n数据量的增加，Solr的搜索效率会变得更低,适合小的搜索应用，对应java客户端的是solrj。")]),t._v(" "),e("p",[t._v("3、elasticSearch\n基于Lucene的搜索框架, 它提供了一个分布式多用户能力的全文搜索引擎，基于RESTful web接口\n上手容易，拓展节点方便，可用于存储和检索海量数据，接近实时搜索，海量数据量增加，搜索响应性能几乎不受影响；\n分布式搜索框架，自动发现节点，副本机制，保障可用性。\n主要特点：对分布式支持很好。")]),t._v(" "),e("h3",{attrs:{id:"_2-2-elasticsearch-概念理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-elasticsearch-概念理解"}},[t._v("#")]),t._v(" 2.2 ElasticSearch 概念理解")]),t._v(" "),e("h5",{attrs:{id:"_2-2-1-index-type-document-field"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-index-type-document-field"}},[t._v("#")]),t._v(" 2.2.1 Index - Type - Document - Field")]),t._v(" "),e("p",[t._v("在ElasticSearch中，文档归属于一种类型(type),而这些类型存在于索引(index)中, 索引名称必须是小写。")]),t._v(" "),e("p",[t._v("类比于关系型数据库，其关系如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("存储类型")]),t._v(" "),e("th",[t._v("数据库-索引")]),t._v(" "),e("th",[t._v("表-类型")]),t._v(" "),e("th",[t._v("数据行-文档")]),t._v(" "),e("th",[t._v("数据列-字段")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Relational DB")]),t._v(" "),e("td",[t._v("Database")]),t._v(" "),e("td",[t._v("Table")]),t._v(" "),e("td",[t._v("Row")]),t._v(" "),e("td",[t._v("Column")])]),t._v(" "),e("tr",[e("td",[t._v("Elasticsearch")]),t._v(" "),e("td",[t._v("Index")]),t._v(" "),e("td",[t._v("Type")]),t._v(" "),e("td",[t._v("Document")]),t._v(" "),e("td",[t._v("Field")])])])]),t._v(" "),e("p",[t._v("以上类比可以方便地理解 ES 中的概念，但还是有区别的。")]),t._v(" "),e("p",[t._v("主要区别是："),e("br"),t._v("\n关系型数据库的存储是基于表的，扁平化的存储，如一个 Person 对象中，有 ContactInfo 这个对象，ContactInfo 包含多个字段，如地址，邮编，邮箱，电话等等。"),e("br"),t._v("\n在关系型数据库中，通常会使用两张表来存储 Person 和 ContactInfo 信息，之间通过 ID 关联。"),e("br"),t._v("\n而在 ES 中，支持非结构化存储，一个 Person 对象的数据（在关系型数据库中称为一条记录，或者一行，在 ES 中称为一条文档），就是这个完整的记录，不需要另外一个 ContactInfo 表，具体的，ES 使用 json 表示这样一条数据（一个文档）。"),e("br"),t._v("\ne.g.")]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"name"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhangsan"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"contactInfo"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Email"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"abx123@xyz.com"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  \n")])])]),e("h5",{attrs:{id:"_2-2-2-分片-shards"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-分片-shards"}},[t._v("#")]),t._v(" 2.2.2 分片 shards")]),t._v(" "),e("p",[t._v("问题：数据量特大，没有足够大的硬盘空间来一次性存储，且一次性搜索那么多的数据，响应跟不上。")]),t._v(" "),e("p",[t._v("ES 提供把数据进行分片存储，这样方便进行拓展和提高吞吐。")]),t._v(" "),e("h5",{attrs:{id:"_2-2-3-副本-replicas"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-副本-replicas"}},[t._v("#")]),t._v(" 2.2.3. 副本 replicas")]),t._v(" "),e("p",[t._v("分片的拷贝，当主分片不可用的时候，副本就充当主分片进行使用。")]),t._v(" "),e("p",[t._v("Elasticsearch 中的每个索引分配5个主分片和1个副本（1个副本：5个分片的拷贝），即10个分片。")]),t._v(" "),e("h3",{attrs:{id:"_2-3-elasticsearch-基础操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-elasticsearch-基础操作"}},[t._v("#")]),t._v(" 2.3 ElasticSearch 基础操作")]),t._v(" "),e("h5",{attrs:{id:"_2-3-1-curl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-1-curl"}},[t._v("#")]),t._v(" 2.3.1 curl")]),t._v(" "),e("p",[t._v("curl 指令：模拟 http 请求")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v("  \n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-X")]),t._v(" 指定http的请求方法 有HEAD GET POST PUT DELETE    \n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" 指定要传输的数据   \n"),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" 指定http请求头信息   \n")])])]),e("p",[t._v("ElasticSearch 中使用 curl 的格式:")]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" -X"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("VERB"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<PROTOCOL>://<HOST>:<PORT>/<PATH>?<QUERY_STRING>'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'<BODY>'")]),t._v("\n")])])]),e("blockquote",[e("p",[t._v("参考文档 ："),e("a",{attrs:{href:"https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/_talking_to_elasticsearch.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("和 Elasticsearch 交互 | Elasticsearch: 权威指南 | Elastic"),e("OutboundLink")],1)])]),t._v(" "),e("ul",[e("li",[t._v("新增索引"),e("br"),t._v("\ncurl -XPUT 'localhost:9201/blog_test?pretty'"),e("br"),t._v("\ncurl -XPUT 'localhost:9201/blog?pretty'")])]),t._v(" "),e("p",[t._v("以上指令是新建一个 blog_test 和 blog 的索引，并将返回结构美化输出（格式化一下）。")]),t._v(" "),e("ul",[e("li",[t._v("删除索引"),e("br"),t._v("\ncurl -XDELETE 'localhost:9200/blog_test?pretty'")])]),t._v(" "),e("p",[t._v("删除 blog_test 这条索引。")]),t._v(" "),e("ul",[e("li",[t._v("新增一条记录(Document)，并指定为 article 类型(Type)，ID为1")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XPUT")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: application/json"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost:9201/blog/article/1?pretty'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'\n{\n  "title" : "Blog Title",\n  "content" : "Blog Content",\n  "Article" : "Xiaoming"\n}\'')]),t._v("\n")])])]),e("p",[t._v("新增一条记录，使用 "),e("code",[t._v("-H")]),t._v(" 指定 HTTP 请求头，"),e("code",[t._v("-d")]),t._v(" 指定要传输的数据。\n这句的意思是：在 blog 索引下，增加一条类型为 article 的数据，改数据的 id 为 1。")]),t._v(" "),e("ul",[e("li",[t._v("ID查询记录"),e("br"),t._v("\ncurl -XGET 'localhost:9200/blog/article/1'\ncurl -XGET 'localhost:9200/blog/article/1?pretty'(美化推荐)")])]),t._v(" "),e("p",[t._v("查询 blog 索引下，article 类型中，id 为 1 的文档。")]),t._v(" "),e("ul",[e("li",[t._v("搜索")])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XGET")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:9201/blog/article/_search?q=title:Title'")]),t._v("\n")])])]),e("p",[t._v("在 blog 索引的 article 类型中，搜索 title 字段匹配 “Title” 的文档。\n"),e("code",[t._v("q")]),t._v(" 表示查询，后面是 lucene 查询语句。")]),t._v(" "),e("h5",{attrs:{id:"_2-3-2-其它查询和操作方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-2-其它查询和操作方式"}},[t._v("#")]),t._v(" 2.3.2 其它查询和操作方式")]),t._v(" "),e("p",[t._v("除了使用 curl 命令进行操作，ES 还提供了多种查询接口。")]),t._v(" "),e("blockquote",[e("p",[t._v("kibana 的 DevTools 面板中，使用的其实就是简化的 curl 命令。")])]),t._v(" "),e("p",[t._v("其它查询方式如 C# 也是支持的。")]),t._v(" "),e("div",{staticClass:"language-csharp extra-class"},[e("pre",{pre:!0,attrs:{class:"language-csharp"}},[e("code",[e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" client "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("ElasticClient")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token class-name"}},[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")])]),t._v(" searchResponse "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token generic-method"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Search")]),e("span",{pre:!0,attrs:{class:"token generic class-name"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("Tweet"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" s\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Index")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"social-*"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("q "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" q\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" m\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Field")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Message"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Query")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myProduct"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Aggregations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" a\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Terms")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"top_10_states"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" t\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Field")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" f"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("State"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Size")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),e("p",[t._v("更多内容可以看这里：\n"),e("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/client/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elasticsearch Clients | Elastic"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"_2-4-search搜索语句之结构化查询语句dsl"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-search搜索语句之结构化查询语句dsl"}},[t._v("#")]),t._v(" 2.4 search搜索语句之结构化查询语句DSL")]),t._v(" "),e("p",[t._v("DSL 是 ES 里面可以完成相当复杂查询的语句。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("什么是 query DSL"),e("br"),t._v("\n1、Domain Specific Language 领域特定语言"),e("br"),t._v("\n2、Elasticsearch提供了完整的查询DSL，基于JSON定义查询"),e("br"),t._v("\n3、用于构造复杂的查询语句")])]),t._v(" "),e("li",[e("p",[t._v("curl查询(空格处理不当,会出问题)")])])]),t._v(" "),e("div",{staticClass:"language-shell extra-class"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-XPOST")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-H")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Content-Type: application/json"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://localhost:9201/blog/article/_search'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'{\n    "query" : {\n        "term" : { "title" : "elk" }\n    }\n}\'')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# term 关键字: 指定字段查询")]),t._v("\n")])])]),e("p",[t._v("与上面看到的不同，这里采用 POST 请求，给 _search 路由发送查询请求，请求 body 使用的就是 DSL 查询语句。整个查询语句是一个 json 语句。")]),t._v(" "),e("blockquote",[e("p",[t._v("可以在 kibana 的 DevTools 面板里面体验。")])]),t._v(" "),e("p",[t._v("DSL 查询语句分两部分，第一个是查询，以 "),e("code",[t._v("query")]),t._v(" 关键字开头，第二个是过滤，以 "),e("code",[t._v("filter")]),t._v(" 关键字开头。"),e("br"),t._v(" "),e("code",[t._v("query")]),t._v(" 指定查询的内容，其会参与查询结果的评分，评分多则表示匹配度高，查询结果靠前。"),e("br"),t._v(" "),e("code",[t._v("filter")]),t._v(" 是对 query 的查询结果进行过滤，但不参与评分。")]),t._v(" "),e("blockquote",[e("p",[t._v("官方文档："),e("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-filter-context.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Query and filter context | Elasticsearch Reference [6.3] | Elastic"),e("OutboundLink")],1)])]),t._v(" "),e("blockquote",[e("p",[t._v("在开发 ES 调试时，建议使用 postman 工具。post 方式提交，增加 http 头信息。body 里面选 row 格式，粘贴对应的 dsl 即可。")])]),t._v(" "),e("ul",[e("li",[t._v("bool 查询示例")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"must"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"elk"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"must_not"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小D"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("ul",[e("li",[t._v("filter 查询示例")])]),t._v(" "),e("blockquote",[e("p",[t._v("filter 查询（filtered语法已经在5.0版本后移除了，在2.0时候标记过期，改用filter ）\n参考地址：https://www.elastic.co/guide/en/elasticsearch/reference/5.0/query-dsl-filtered-query.html")])]),t._v(" "),e("div",{staticClass:"language-json extra-class"},[e("pre",{pre:!0,attrs:{class:"language-json"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"query"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"bool"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"filter"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"range"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"PV"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"gt"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"must"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"match"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token property"}},[t._v('"title"')]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ELK"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("总结：")]),t._v(" "),e("p",[t._v("1、大部分filter的速度快于query的速度"),e("br"),t._v("\n2、filter不会计算相关度得分，且结果会有缓存，效率高"),e("br"),t._v("\n3、全文搜索、评分排序，使用query"),e("br"),t._v("\n4、是非过滤，精确匹配，使用filter")]),t._v(" "),e("blockquote",[e("p",[t._v("官方文档 ："),e("a",{attrs:{href:"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Query DSL | Elasticsearch Reference [6.3] | Elastic"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"三、kibana"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、kibana"}},[t._v("#")]),t._v(" 三、Kibana")]),t._v(" "),e("p",[t._v("基础操作文档：\n"),e("a",{attrs:{href:"https://www.elastic.co/guide/en/kibana/current/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kibana User Guide [6.3] | Elastic"),e("OutboundLink")],1),t._v(" "),e("a",{attrs:{href:"https://www.elastic.co/guide/cn/kibana/current/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kibana 用户手册 | Elastic"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"_3-1-创建索引表达式-define-index-pattern"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-创建索引表达式-define-index-pattern"}},[t._v("#")]),t._v(" 3.1 创建索引表达式（Define Index Pattern）")]),t._v(" "),e("p",[t._v("在 Management 面板中，新建一个索引匹配项，可以使用*统配符，去匹配ES中的一个或多个索引(如果没有匹配，无法点击下一步)，\n后续查询操作都是基于这个索引项的匹配去做。")]),t._v(" "),e("p",[t._v("可以理解为一个索引组。如，有一个 mylog 的索引，实际情况下，通常是每天建立一个新的索引，即\nmylog-2018-08-01,mylog-2018-08-02,..."),e("br"),t._v("\n如果我们要对 mylog 相关的内容进行后续的查询，聚合分析，数据展示，就需要建立一个 "),e("code",[t._v("mylog-*")]),t._v(" 的索引匹配/索引组。")]),t._v(" "),e("h3",{attrs:{id:"_3-2-discover-面板发现数据-原始查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-discover-面板发现数据-原始查询"}},[t._v("#")]),t._v(" 3.2 discover 面板发现数据，原始查询")]),t._v(" "),e("p",[t._v("建立索引匹配之后，就可以在 discover 面板中看到相应的项，选择之后，就可以进行原始数据的查询了。")]),t._v(" "),e("p",[t._v("可以指定时间进行查询。\n可以使显示的字段。\n查询索引的数据，是使用lucence语法进行查询。")]),t._v(" "),e("h3",{attrs:{id:"_3-3-可视化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-可视化"}},[t._v("#")]),t._v(" 3.3 可视化")]),t._v(" "),e("p",[t._v("可以在 Visualize 进行数据可以的配置。"),e("br"),t._v("\n首先选择要进行可视化的索引匹配/索引组，然后建立一个可视化组件。"),e("br"),t._v("\n具体方法，可以看文档：\n"),e("a",{attrs:{href:"https://www.elastic.co/guide/cn/kibana/current/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kibana 用户手册 | Elastic"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("Dashboard 提供了一个可视化面板聚合展示的功能，可以展示多种多样的数据，日常的数据检测主要就是看这里了。"),e("br"),t._v("\n更多内容，看文档咯。")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://www.elastic.co/guide/en/elasticsearch/guide/current/images/elas_29in03.png",alt:""}})]),t._v(" "),e("p",[t._v("官方文档目录：")]),t._v(" "),e("ul",[e("li",[t._v("总文档目录 "),e("a",{attrs:{href:"https://www.elastic.co/guide/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elastic Stack and Product Documentation | Elastic"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("简体中文文档目录(2.x 版本，内容偏旧) "),e("a",{attrs:{href:"https://www.elastic.co/guide/cn/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("简体中文 | Elastic"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Kibana 简体中文用户手册 "),e("a",{attrs:{href:"https://www.elastic.co/guide/cn/kibana/current/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kibana 用户手册 | Elastic"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://elasticsearch.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Elastic中文社区"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("参考资料：")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://www.cnblogs.com/CoderAyu/p/9601991.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("ElasticSearch入门 附.Net Core例子 - 码农阿宇 - 博客园"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);