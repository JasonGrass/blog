(window.webpackJsonp=window.webpackJsonp||[]).push([[116],{689:function(v,_,e){"use strict";e.r(_);var n=e(6),r=Object(n.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("p",[v._v("经典面试题:")]),v._v(" "),e("p",[v._v("Q")]),v._v(" "),e("ol",[e("li",[v._v("react/vue中的key有什么作用？（key的内部原理是什么？）")]),v._v(" "),e("li",[v._v("为什么遍历列表时，key最好不要用index?")])]),v._v(" "),e("p",[v._v("A")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("虚拟DOM中key的作用："),e("br"),v._v("\n1.1. 简单的说: key是虚拟DOM对象的标识, 在更新显示时key起着极其重要的作用。"),e("br"),v._v("\n1.2. 详细的说: 当状态中的数据发生变化时，react会根据【新数据】生成【新的虚拟DOM】, 随后React进行【新虚拟DOM】与【旧虚拟DOM】的diff比较，比较规则如下：")]),v._v(" "),e("p",[v._v("a. 旧虚拟DOM中找到了与新虚拟DOM相同的key："),e("br"),v._v("\n(1).若虚拟DOM中内容没变, 直接使用之前的真实DOM"),e("br"),v._v("\n(2).若虚拟DOM中内容变了, 则生成新的真实DOM，随后替换掉页面中之前的真实DOM")]),v._v(" "),e("p",[v._v("b. 旧虚拟DOM中未找到与新虚拟DOM相同的key"),e("br"),v._v("\n根据数据创建新的真实DOM，随后渲染到到页面")])]),v._v(" "),e("li",[e("p",[v._v("用index作为key可能会引发的问题：")]),v._v(" "),e("ol",[e("li",[e("p",[v._v("若对数据进行：逆序添加、逆序删除等破坏顺序操作:"),e("br"),v._v("\n会产生没有必要的真实DOM更新 ==> 界面效果没问题, 但效率低。")])]),v._v(" "),e("li",[e("p",[v._v("如果结构中还包含输入类的DOM："),e("br"),v._v("\n会产生错误DOM更新 ==> 界面有问题。")])]),v._v(" "),e("li",[e("p",[v._v("注意！如果不存在对数据的逆序添加、逆序删除等破坏顺序操作，"),e("br"),v._v("\n仅用于渲染列表用于展示，使用index作为key是没有问题的。")])])])]),v._v(" "),e("li",[e("p",[v._v("开发中如何选择key?:"),e("br"),v._v("\n1.最好使用每条数据的唯一标识作为key, 比如id、手机号、身份证号、学号等唯一值。"),e("br"),v._v("\n2.如果确定只是简单的展示数据，用index也是可以的。")])])]),v._v(" "),e("h2",{attrs:{id:"重点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#重点"}},[v._v("#")]),v._v(" 重点")]),v._v(" "),e("p",[v._v("1 效率问题"),e("br"),v._v("\n2 有输入类 DOM 时可能有问题")])])}),[],!1,null,null,null);_.default=r.exports}}]);